{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "LabInsight Configuration Schema",
  "description": "Schema for LabInsight configuration files.",
  "type": "object",
  "properties": {
    "version": {
      "type": "integer",
      "description": "Version of the configuration file."
    },
    "projectName": {
      "type": "string",
      "description": "The name of the project."
    },
    "projectType": {
      "type": "string",
      "description": "The type of the project (e.g., 'none', 'web', 'mobile')."
    },
    "engine": {
      "type": "string",
      "description": "The engine used for the project (e.g., 'none', 'node')."
    },
    "environment": {
      "type": "string",
      "description": "The environment for the project (e.g., 'development', 'production')."
    },
    "linting": {
      "type": "string",
      "description": "The linting configuration (e.g., 'none', 'eslint')."
    },
    "rules": {
      "type": "object",
      "description": "Rules for code analysis.",
      "properties": {
        "max-lines": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule (e.g., 'error', 'warning')."
            },
            "options": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "description": "Maximum number of lines allowed in a file."
                }
              }
            }
          }
        },
        "max-function-lines": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "description": "Maximum number of lines allowed in a function."
                }
              }
            }
          }
        },
        "no-large-classes": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "description": "Maximum allowed size for classes."
                }
              }
            }
          }
        },
        "require-method-description": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "require-parameter-annotation": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "require-return-annotation": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "require-try-catch": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "no-empty-catch-blocks": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "limit-recursion-depth": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "description": "Maximum recursion depth allowed."
                }
              }
            }
          }
        },
        "max-array-length": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "description": "Maximum length of arrays."
                }
              }
            }
          }
        },
        "no-eval": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "no-global-state": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "no-inline-scripts": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            }
          }
        },
        "casing.variables": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for variables (e.g., 'camelCase', 'snake_case')."
                }
              }
            }
          }
        },
        "casing.parameters": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for parameters."
                }
              }
            }
          }
        },
        "casing.properties": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for properties."
                }
              }
            }
          }
        },
        "casing.methods": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for methods."
                }
              }
            }
          }
        },
        "casing.classes": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for class names (e.g., 'PascalCase')."
                }
              }
            }
          }
        },
        "casing.types": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for types."
                }
              }
            }
          }
        },
        "casing.interfaces": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for interfaces."
                }
              }
            }
          }
        },
        "casing.enums": {
          "type": "object",
          "properties": {
            "severity": {
              "type": "string",
              "description": "Severity of the rule."
            },
            "options": {
              "type": "object",
              "properties": {
                "casing": {
                  "type": "string",
                  "description": "Casing style for enums."
                }
              }
            }
          }
        }
      }
    },
    "ignoredDirectories": {
      "type": "array",
      "description": "List of directories to ignore during analysis.",
      "items": {
        "type": "string"
      }
    },
    "ignoredFiles": {
      "type": "array",
      "description": "List of files to ignore during analysis.",
      "items": {
        "type": "string"
      }
    },
    "casing": {
      "type": "object",
      "description": "Casing rules for various code elements.",
      "properties": {
        "variableCasing": {
          "type": "string",
          "description": "Casing convention for variables."
        },
        "parameterCasing": {
          "type": "string",
          "description": "Casing convention for parameters."
        },
        "propertyCasing": {
          "type": "string",
          "description": "Casing convention for properties."
        },
        "methodCasing": {
          "type": "string",
          "description": "Casing convention for methods."
        },
        "classCasing": {
          "type": "string",
          "description": "Casing convention for class names."
        },
        "typeCasing": {
          "type": "string",
          "description": "Casing convention for types."
        },
        "interfaceCasing": {
          "type": "string",
          "description": "Casing convention for interfaces."
        },
        "enumCasing": {
          "type": "string",
          "description": "Casing convention for enums."
        }
      }
    },
    "options": {
      "type": "object",
      "description": "Global options for code analysis.",
      "properties": {
        "maxFileLines": {
          "type": "integer",
          "description": "Maximum allowed number of lines in a file."
        },
        "functionMaxLines": {
          "type": "integer",
          "description": "Maximum allowed number of lines in a function."
        },
        "consistentFunctionNaming": {
          "type": "boolean",
          "description": "Whether to enforce consistent function naming."
        },
        "noLargeClasses": {
          "type": "boolean",
          "description": "Whether to enforce limits on class size."
        },
        "requireMethodDescription": {
          "type": "boolean",
          "description": "Whether to require method descriptions."
        },
        "requireParameterAnnotations": {
          "type": "boolean",
          "description": "Whether to require annotations for method parameters."
        },
        "requireReturnAnnotations": {
          "type": "boolean",
          "description": "Whether to require annotations for return types."
        },
        "requireTryCatch": {
          "type": "boolean",
          "description": "Whether to require try-catch blocks."
        },
        "noEmptyCatchBlocks": {
          "type": "boolean",
          "description": "Whether to disallow empty catch blocks."
        },
        "limitRecursionDepth": {
          "type": "integer",
          "description": "Maximum recursion depth allowed."
        },
        "maxArrayLength": {
          "type": "integer",
          "description": "Maximum allowed array length."
        },
        "noEval": {
          "type": "boolean",
          "description": "Whether to disallow the use of 'eval'."
        },
        "noGlobalState": {
          "type": "boolean",
          "description": "Whether to disallow global state."
        },
        "noInlineScripts": {
          "type": "boolean",
          "description": "Whether to disallow inline scripts."
        }
      }
    },
    "decorators": {
      "type": "object",
      "description": "Rules for decorators in the code.",
      "properties": {
        "classDecorators": {
          "type": "boolean",
          "description": "Whether to allow class decorators."
        },
        "methodDecorators": {
          "type": "boolean",
          "description": "Whether to allow method decorators."
        },
        "propertyDecorators": {
          "type": "boolean",
          "description": "Whether to allow property decorators."
        },
        "parameterDecorators": {
          "type": "boolean",
          "description": "Whether to allow parameter decorators."
        }
      }
    }
  },
  "required": ["version", "projectName", "rules"]
}
